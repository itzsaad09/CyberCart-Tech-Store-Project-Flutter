on:
  push:
    branches:
      - main
      - master
      - develop

name: "Build & Release"

permissions:
  contents: write

jobs:
  build:
    name: Build & Release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Required to fetch all history for version tags
          fetch-depth: 0

      # ðŸ‘‡ Step 1: Get the latest version tag from your repo (e.g., v1.0.5)
      - name: Get latest tag
        id: latest_tag
        run: |
          TAG=$(git tag --sort=-v:refname | head -n 1)
          if [ -z "$TAG" ]; then
            TAG="v1.0.0"
          fi
          echo "tag_name_with_v=$TAG" >> $GITHUB_OUTPUT

      # ðŸ‘‡ Step 2: Calculate the next version number
      - name: Calculate next version
        id: new_version
        run: |
          # Use bash parameter expansion to remove the 'v' prefix
          VERSION=${{ steps.latest_tag.outputs.tag_name_with_v }}
          VERSION_NO_V="${VERSION#v}"

          # Split into parts and increment the patch number
          major=$(echo "$VERSION_NO_V" | cut -d. -f1)
          minor=$(echo "$VERSION_NO_V" | cut -d. -f2)
          patch=$(echo "$VERSION_NO_V" | cut -d. -f3)
          new_patch=$((patch + 1))
          
          # Construct the new version string and set it as an output
          NEW_VERSION_STRING="$major.$minor.$new_patch+1"
          echo "version=$NEW_VERSION_STRING" >> $GITHUB_OUTPUT
          echo "New calculated version is $NEW_VERSION_STRING"

      # ðŸ‘‡ Step 3: Update pubspec.yaml with the new version
      - name: Update pubspec.yaml
        run: |
          sed -i '' "s/version: .*/version: ${{ steps.new_version.outputs.version }}/" pubspec.yaml

      # ðŸ‘‡ Step 4: Commit the version bump back to the repo
      - name: Commit version bump
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "ci: Bump version to ${{ steps.new_version.outputs.version }}"
          file_pattern: pubspec.yaml

      # --- Build process continues using the new version ---

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build and Rename Artifacts
        run: |
          flutter build apk --release --split-per-abi
          mv build/app/outputs/apk/release/app-arm64-v8a-release.apk build/app/outputs/apk/release/CyberCart-v${{ steps.new_version.outputs.version }}.apk
          
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          mv Runner.app Payload/
          zip -r app.ipa Payload
          mv app.ipa ../../../CyberCart-v${{ steps.new_version.outputs.version }}.ipa

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/CyberCart-*.apk,build/CyberCart-*.ipa"
          tag: "v${{ steps.new_version.outputs.version }}"
          token: ${{ secrets.GITHUB_TOKEN }}